#include "Utils.h"
#include <direct.h>
#include "ErrorHandler.h"
#ifdef _WIN32
    #include <Windows.h>
#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Utils::FileSystem //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool Utils::Filesystem::DirectoryExists(const std::wstring& dir) {
#ifdef _WIN32
    DWORD attributes = GetFileAttributesW(dir.c_str());
    if (attributes == INVALID_FILE_ATTRIBUTES)
        return false;
    if (attributes & FILE_ATTRIBUTE_DIRECTORY)
        return true;
    return false;
#endif //_WIN32
};

std::wstring Utils::Filesystem::GetWorkingDirectory() {
#ifdef _WIN32
    std::wstring workingDir;
    workingDir.resize(FILENAME_MAX);
    _wgetcwd(&workingDir.front(), workingDir.size());
    // Used to adjust size of string
    workingDir = std::wstring(workingDir.c_str());
    return workingDir;
#endif //_WIN32
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/// Utils::Internal ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
std::wstring Utils::Internal::GetMediaFolderPath() {
    if (Utils::Filesystem::DirectoryExists(L"Media/")) {
        return Utils::Filesystem::GetWorkingDirectory() + std::wstring(L"/Media/");
    }
    if (Utils::Filesystem::DirectoryExists(L"../Media")) {
        return Utils::Filesystem::GetWorkingDirectory() + std::wstring(L"/../Media/");
    }
    VE_ERROR(L"Failed to find media folder");
    return std::wstring(L"");
}